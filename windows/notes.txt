Things to Install:

	- WSL (Ubuntu 18.04)
	- keepass2
	- PyCharm 2018 (Professional)
	- Hyper.js
	- config files from personal github (vim, zsh, tmux, hyper)
	- Vundle for Vim plugins
	- OhMyZsh
	- XMing
	- Jekyll (in WSL)
		1. sudo apt-get install ruby-full build-essential
		2. Install LiveReload for Windows (livereload.com)
		3. Create GEM_HOME env var and extend PATH in .zshrc:
				
				export GEM_HOME=$HOME/gems
				export PATH=$PATH:$HOME/gems/bin

		4. Install Jekyll inside a bundle virtual env:

				gem install bundler

				Navigate to docs folder of repo from which you will launch jekyll to serve content.

				bundle init
				mkdir -p vendor/bundle		# Install gems in this location (to avoid conflicts with system gems)
				bundle install --path vendor/bundle
				bundle add jekyll

				Edit ./Gemfile and add:

					gem "jemoji"

					group :jekyll_plugins do
						gem 'hawkins'
					end

				bundle install 		# to add jemoji and hawkins (might require 'bundle install hawkins')

				The following might be needed:

					gem install pkgconfig
					sudo apt-get install libxslt1-dev
					gem install nokogiri -- --use-system-libraries --with-xml2-include=/usr/include/libxml2 --with-xml2-lib//usr/lib/
					gem install jemoji 

		4. To launch navigate to docs sub-folder in training-materials repo:

				bundle exec jekyll serve

		5. To enable SSL (for HTTPS):

				# Source: https://www.remotesynthesis.com/blog/running-ssl-localhost

				mkdir ~/.certs
				cd ~/.certs
				openssl req -x509 -out localhost.crt -keyout localhost.key \
					-newkey rsa:2048 -nodes -sha256 \
					-subj '/CN=localhost' -extensions EXT -config <( \
					printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")

				In your docs folder create an 'ssl' sub-folder and symlink the two files there. Then to run Jekyll with SSL issue:

					bundle exec jekyll serve --ssl-key ssl/localhost.key --ss-cert ssl/localhost.crt

				To use multiple config files with the latter overriding the former add:

					--config _config.yml,_config.dev.yml

				Chrome will still complain that the website is not secure because it won't recognize the self-signed SSL certificate. To fix this:
					- Go to chrome settings (chrome://settings)
					- Click on 'Advanced Settings'
					- Under HTTPS/SSL click 'Manage Certificate'
					- Go to 'Trusted Root Certificate Authorities' tab
					- Click 'Import'
					- Use the Wizard to import 'localhost.crt'
					- Scroll down the list and click on the 'localhost' certificate. Click on 'Advanced' and select ALL the checkboxes.

				You MAY have to also add the self-signed certificate to the Windows Certificate Store (Trusted Authority).

					- Follow the instructions in: https://www.thewindowsclub.com/manage-trusted-root-certificates-windows

	
.hyper.js:
	Location: C:\Users\MujtabaAbidHasan\		# Windows Home Folder

	Requires:
		Inconsolata-g font modified for Powerline
